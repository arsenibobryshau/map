import pandas as pd
import numpy as np

print("üîß Opravuji data v kombinovane_data.csv...")

# Naƒçten√≠ dat
df = pd.read_csv('kombinovane_data.csv', sep=';', encoding='utf-8')

print(f"üìä P≈Øvodn√≠ poƒçet z√°znam≈Ø: {len(df)}")

# === 1. Oprava form√°tu sou≈ôadnic (ƒç√°rka ‚Üí teƒçka) ===
print("üîÑ Opravuji form√°t sou≈ôadnic (ƒç√°rka ‚Üí teƒçka)...")

def oprav_souradnice(hodnota):
    if pd.isna(hodnota) or hodnota == 0:
        return np.nan
    if isinstance(hodnota, str):
        # Nahraƒè ƒç√°rku teƒçkou a p≈ôeveƒè na float
        try:
            return float(hodnota.replace(',', '.'))
        except:
            return np.nan
    return float(hodnota) if hodnota != 0 else np.nan

df['lat'] = df['lat'].apply(oprav_souradnice)
df['lon'] = df['lon'].apply(oprav_souradnice)

print(f"‚úÖ Sou≈ôadnice opraveny")

# === 2. Oprava problematick√©ho p≈ô√≠znaku 28401 ===
print("üîÑ Opravuji problematick√Ω p≈ô√≠znak 28401...")

# Najdi z√°znam s p≈ô√≠znakem 28401
problemy = df[df['P≈ò√çZNAK'] == '28401']
if len(problemy) > 0:
    print(f"Nalezen problematick√Ω z√°znam: {problemy.iloc[0]['N√ÅZEV']}")
    
    # P≈ôesu≈à PSƒå z p≈ô√≠znaku do adresy a nastav spr√°vn√Ω p≈ô√≠znak
    for idx in problemy.index:
        stara_adresa = df.loc[idx, 'Adresa']
        psc = df.loc[idx, 'P≈ò√çZNAK']
        
        # P≈ôidej PSƒå do adresy pokud tam u≈æ nen√≠
        if psc not in stara_adresa:
            df.loc[idx, 'Adresa'] = f"{psc}, {stara_adresa}"
        
        # Nastav spr√°vn√Ω p≈ô√≠znak (odhadnu podle podobn√Ωch z√°znam≈Ø)
        df.loc[idx, 'P≈ò√çZNAK'] = '35'  # nejƒçastƒõj≈°√≠ p≈ô√≠znak pro podobn√© z√°znamy
        
        print(f"  Opraveno: {df.loc[idx, 'N√ÅZEV']} - p≈ô√≠znak: 35")

print(f"‚úÖ Problematick√© p≈ô√≠znaky opraveny")

# === 3. Ulo≈æen√≠ opraven√Ωch dat ===
df.to_csv('kombinovane_data.csv', sep=';', encoding='utf-8', index=False)

print(f"üíæ Opraven√° data ulo≈æena")

# === 4. Kontrola v√Ωsledk≈Ø ===
print(f"\nüìà Kontrola po opravƒõ:")
print(f"üìç Z√°znamy s koordin√°ty: {len(df.dropna(subset=['lat', 'lon']))}")
print(f"‚ùå Z√°znamy bez koordin√°t≈Ø: {len(df) - len(df.dropna(subset=['lat', 'lon']))}")

print(f"\nüè∑Ô∏è Aktu√°ln√≠ p≈ô√≠znaky:")
print(df['P≈ò√çZNAK'].value_counts().sort_index())

print(f"\nüîç Uk√°zka opraven√Ωch sou≈ôadnic:")
valid_coords = df.dropna(subset=['lat', 'lon'])
if len(valid_coords) > 0:
    print(valid_coords[['N√ÅZEV', 'lat', 'lon', 'P≈ò√çZNAK']].head(5).to_string(index=False)) 